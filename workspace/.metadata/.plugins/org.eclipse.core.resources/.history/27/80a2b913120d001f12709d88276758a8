package chap15.sec07;

import java.util.*;

public class ImmutableExample {

	public static void main(String[] args) {
		// 불변 컬렉션 생성 : List, Set, Map 의 정적 메소드인 of()로 생성함 
		// List 불변 컬렉션 생성(저장된 요소를 변경하고 싶지 않을때 사용)
		List<String> ImmutableList1 = List.of("A","B","C");
		// ImmutableList1.add("D"); (x)
		// ImmutableList1.remove("C"); (x)
		System.out.println("ImmutableList1 :" + ImmutableList1);
		
		//Set 불변 컬렉션 생성
		Set<String>  immutableList2 = Set.of("A","B","C","D");
		immutableList2.add("E");
		System.out.println("immutableList2 :" + immutableList2);
		
		//Map 불변 컬렉션 생성
		Map<Integer,String> immutableMap = Map.of(
				1, "A", 
				2, "B",
				3, "C"
				);
		// immutableMap.put(4,  "D"); (x)
		System.out.println("immutableMap :" + immutableMap);
		
		// List 컬렉션을 불변 컬렉션으로 복사
		List<String> list = new ArrayList<>();
		list.add("A");
		list.add("B");
		list.add("C");
		list.add("D");
		List<String> immutableList2 = List.copyOf(list);
		list.add("E");
		System.out.println("list : " + list);
		System.out.println("immutableList2 :" + immutableList2);
		
		// Set 컬렉션을 불변 컬렉션으로 복사
		Set<String> set = new HashSet<>();
	}

}
